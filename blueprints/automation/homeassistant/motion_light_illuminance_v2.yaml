#Changelog
#V1.0 Initial version
#V2.0 Added optional blocker entities which when turned off prevent light from turning on, useful when using in the bedroom.
#V2.0.1 Added person to be home to turn on light, in some scenarios light turned on while noone was home.

blueprint:
  name: Motion-activated Light with illuminance v2.0
  description: Turn on and off a light when motion is detected and it's dark in the room
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 5
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: minutes
    turn_light_off:
      name: turn light off
      description: Set this to true if you want the light to turn off with this automation
      default: true
      selector:
        boolean:
    illuminance_entity:
      name: Light sensor
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    low_illuminance_threshold:
      name: Low light
      description: When the light is lower then this threshold, the light will turn on
      default: 20
      selector:
        number:
          min: 0
          max: 200
          unit_of_measurement: lx
    high_illuminance_threshold:
      name: Enough light
      description: If the light is on and is higher than this value, the light will turn off.
      default: 40
      selector:
        number:
          min: 0
          max: 200
          unit_of_measurement: lx
    light_color_temperature:
      name: Color Temperature
      description: 'Choose the color temperature. Examples: Cool White: 154; Daylight
        White: 181; White: 250; Soft White: 370; Warm White: 454'
      default: 370
      selector:
        number:
          min: 154.0
          max: 500.0
          unit_of_measurement: mireds
          mode: slider
          step: 1.0
    light_brightness:
      name: Brightness
      description: Choose the brightness.
      default: 100
      selector:
        number:
          min: 1.0
          max: 100.0
          mode: slider
          step: 1.0
          unit_of_measurement: '%'
    blocker_entity_1:
      name: Blocker entity 1
      description: Optional entity which blocks lights from turning on, useful for using in the bedroom when you have a sleep entity. should be an entity with a on or off state. Off means light won't turn on.
      default:
      selector:
        entity:
    blocker_entity_2:
      name: Blocker entity 2
      description: Optional entity which blocks lights from turning on, useful for using in the bedroom when you have a sleep entity. should be an entity with a on or off state. Off means light won't turn on.
      default:
      selector:
        entity:
    person_1:
      name: persoon 1
      description: Deze persoon moet thuis zijn om de notficatie te geven
      default:
      selector:
        entity:
          domain: person
    person_2:
      name: persoon 2
      description: Deze persoon moet thuis zijn om de notficatie te geven
      default:
      selector:
        entity:
          domain: person

variables:
  light_brightness_var: !input light_brightness
  light_brightness_int: '{{(light_brightness_var | float(default=0) * 2.55) | round(0) }}'
  turn_light_off: !input turn_light_off
  blocker_entity_1: !input blocker_entity_1
  blocker_entity_2: !input blocker_entity_2
  person_1: !input person_1
  person_2: !input person_2

mode: queued

trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input motion_entity
    from: "on"
    to: "off"
    for:
      minutes: !input no_motion_wait
  - platform: numeric_state
    entity_id: !input illuminance_entity 
    below: !input low_illuminance_threshold
  - platform: numeric_state
    entity_id: !input illuminance_entity 
    above: !input high_illuminance_threshold
  - platform: homeassistant
    event: start

action:
  - choose:
    - conditions:
        - condition: template
          value_template: "{{ turn_light_off }}"
        - condition: state
          entity_id: !input motion_entity
          state: "off"
          for:
            minutes: !input no_motion_wait
      sequence:
        - service: light.turn_off
          target: !input light_target
    - conditions:
        - condition: numeric_state
          entity_id: !input illuminance_entity
          above: !input high_illuminance_threshold
      sequence:
        - service: light.turn_off
          target: !input light_target
    - conditions:
      - condition: numeric_state
        entity_id: !input illuminance_entity
        below: !input low_illuminance_threshold
      sequence:
        - condition: or
          conditions:
          - condition: and
            conditions:
            - condition: or
              conditions:
              - condition: template
                value_template: "{{ states[blocker_entity_1].state == 'on' }}"
              - condition: template
                value_template: "{{ blocker_entity_1 == none }}"
            - condition: or
              conditions:
              - condition: template
                value_template: "{{ states[person_1].state == 'home' }}"
              - condition: template
                value_template: "{{ person_1 == none }}"
          - condition: and
            conditions:
            - condition: or
              conditions:
              - condition: template
                value_template: "{{ states[blocker_entity_2].state == 'on' }}"
              - condition: template
                value_template: "{{ blocker_entity_2 == none }}"
            - condition: or
              conditions:
              - condition: template
                value_template: "{{ states[person_2].state == 'home' }}"
              - condition: template
                value_template: "{{ person_2 == none }}"
        - service: light.turn_on
          target: !input light_target
          data:
            color_temp: !input 'light_color_temperature'
            brightness: "{{light_brightness_int}}"